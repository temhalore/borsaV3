<#@ include file="OrmLite.Core.ttinclude" #>
<#
	// Settings
	ConnectionStringName = "repo";			// Uses last connection string in config if not specified
	var Namespace = "Prj.DAL.Model";
	SchemaName = "";
	IncludeViews = false;
	ClassPrefix = "";
	ClassSuffix = "";
	bool SplitIntoMultipleFiles = true;		// if true: Generates one file for every class
	bool MakeSingular = false;			// if true: Changes the classname to singular if tablename is not singular
	bool UseIdAsPK = false;				// if true: Changes the primary key property name to Id
	bool GenerateConstructor = true;		// if true: Generates the default empty constructor 
	EntityInfoTable = "T_COMMON_ENTITYINFO";

    // Read schema
	var tables = LoadTables(MakeSingular);

	var entityInfos = LoadEntityInfos();

/*
	// Tweak Schema
	tables["tablename"].Ignore = true;							// To ignore a table
	tables["tablename"].ClassName = "newname";					// To change the class name of a table
	tables["tablename"]["columnname"].Ignore = true;			// To ignore a column
	tables["tablename"]["columnname"].PropertyName="newname";	// To change the property name of a column
	tables["tablename"]["columnname"].PropertyType="bool";		// To change the property type of a column
	

*/

	// Generate output
	if (tables.Count>0)
	{


#>
<#
//if (string.IsNullOrEmpty(Namespace)) Namespace=ConnectionStringName;
//if (string.IsNullOrEmpty(Namespace)) Namespace="OrmLitePoco";
var manager = Manager.Create(Host, GenerationEnvironment);
manager.StartHeader(); #>// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.ComponentModel.DataAnnotations;
using DapperExtensions.Mapper;
using System.ComponentModel.DataAnnotations.Schema;

namespace <#=Namespace #>
{
<#manager.EndBlock(); #>
<#
//foreach(Table tbl in from t in tables where !t.Ignore select t)
//foreach(Table tbl in from t in tables where t.Name.StartsWith("T_") select t)
foreach(Table tbl in from t in tables select t)
{

	

	//if(!tbl.Name.StartsWith("T_PER_") && !tbl.Name.StartsWith("T_ORT_"))		
		//continue;
	if(tbl.Name.Equals("EntityInfo"))
		continue;
	if(tbl.Schema.Equals("cdc"))
		continue;
	if(tbl.Name.Equals("ErasmusAnabilimDallari"))
		continue;


	// if(!tbl.Schema.StartsWith("oys") && !tbl.Schema.StartsWith("staj"))		
	//    continue;


	if(tbl.Name.Equals("T_PER_NUFUS"))
    {
		tbl.ClassName = tbl.Name;
	}

//manager.StartNewFile("T_" + tbl.Schema +"_"+tbl.Name + ".cs"); --ae değişiklik
manager.StartNewFile(tbl.Name + ".cs");
#>
<# if (MakeSingular) {#>
	[Alias("<#=tbl.Name#>")]
<#}#>


    //[Dapper.Contrib.Extensions.Table("<#=tbl.Schema#>.<#=tbl.Name#>")] --ae değişiklik
	[Dapper.Contrib.Extensions.Table("<#=tbl.Name#>")]

    //public partial class T_<#=tbl.Schema#>_<#=tbl.Name#><#if (tbl.HasPK() && UseIdAsPK) { #> : IHasId<<#=tbl.PK.PropertyType#>><#}#> --ae değişiklik
	 public partial class <#=tbl.Name#><#if (tbl.HasPK() && UseIdAsPK) { #> : IHasId<<#=tbl.PK.PropertyType#>><#}#>
    {
<# if (GenerateConstructor) { #>
		//public T_<#=tbl.Schema#>_<#=tbl.Name#>()--ae değişiklik
		public <#=tbl.Name#>()
		{
		}

        //public static string SchemeName { get { return "<#=tbl.Schema#>"; } }
        public static string GetSchema() { return "<#=tbl.Schema#>"; }

<# }
foreach(Column col in from c in tbl.Columns where !c.Ignore select c)
{

    if(col.Name=="AdSoyad" || col.Name=="EnumSeviye")
    continue;

	EntityInfo entityInfo = entityInfos.GetInfo(tbl.Name, col.Name);	

 if ((col.Name!=col.PropertyName) || (col.IsPK && UseIdAsPK)) { #>
        //[Alias("<#=col.Name#>")]
<# }  if (col.PropertyType == "string" && col.Size > 0) { #>
        [StringLength(<#=col.Size#>)]
<# }  if (col.IsAutoIncrement) { #>
        //[AutoIncrement]
<# }  if (col.IsNullable != true && col.IsAutoIncrement != true) { #>
        [Required]
<# } 
   
   if(entityInfo != null && !string.IsNullOrWhiteSpace(entityInfo.Attributes))
   {
#>
        <#=entityInfo.Attributes#>
<#   
   }
   
   if (!col.IsPK) {
	   if(entityInfo != null && !string.IsNullOrWhiteSpace(entityInfo.DataType))
       {
#>
        public <#=entityInfo.DataType#> <#=col.PropertyName#> { get; set;}
<#
	   }
	   else {
#>
        public <#=col.ProperPropertyType#> <#=col.PropertyName#> { get; set;}
<#		
	   }
   } 
   
   if (col.IsPK && UseIdAsPK) {
	   if(entityInfo != null && !string.IsNullOrWhiteSpace(entityInfo.DataType))
       {
#>
        public <#=entityInfo.DataType#> Id { get; set;}
<# 
	   }
	   else {
#>
        public <#=col.ProperPropertyType#> Id { get; set;}
<# 
		}
   } 
   
   if (col.IsPK && !UseIdAsPK) {
		if(entityInfo != null && !string.IsNullOrWhiteSpace(entityInfo.DataType))
		{
#>
		[Dapper.Contrib.Extensions.Key]		
        public <#=entityInfo.DataType#> <#=col.PropertyName#> { get; set;}
<# 
		}
		else {  
#>
		[Dapper.Contrib.Extensions.Key]
        public <#=col.ProperPropertyType#> <#=col.PropertyName#> { get; set;}
<#
		}
   } 
#>
<# } #>
    }
	
    
   // public class T_<#=tbl.Schema#>_<#=tbl.Name#>Mapper : AutoClassMapper<T_<#=tbl.Schema#>_<#=tbl.Name#>> --ae değişiklik
	public class <#=tbl.Name#>Mapper : AutoClassMapper<<#=tbl.Name#>>
    {
        //public T_<#=tbl.Schema#>_<#=tbl.Name#>Mapper() --ae değişiklik
		public <#=tbl.Name#>Mapper()
            : base()
        {
            Schema("<#=tbl.Schema#>");
        }
    }
 
	//public enum T_<#=tbl.Schema#>_<#=tbl.Name#>_Properties {--ae değişiklik
	public enum <#=tbl.Name#>_Properties {

	<#
		foreach(Column col in from c in tbl.Columns where !c.Ignore select c)
		{

		if(col.Name=="AdSoyad")
    continue;
	#>
	<#=col.Name#>,
	<# } #>
	
	}	
<#  manager.EndBlock(); #>
<#  }   #>
<#manager.StartFooter(); #>
}

#pragma warning restore 1591
<#manager.EndBlock(); #>
<#manager.Process(SplitIntoMultipleFiles,false); #>
<#  }   #>

